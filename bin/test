#!/usr/bin/env bash

# Synopsis:
# Test the track's exercises.
#
# At a minimum, this file must check if the example/exemplar solution of each
# Practice/Concept Exercise passes the exercise's tests.
#
# To check this, you usually have to (temporarily) replace the exercise's solution files
# with its exemplar/example files.
#
# If your track uses skipped tests, make sure to (temporarily) enable these tests
# before running the tests.
#
# The path to the solution/example/exemplar files can be found in the exercise's
# .meta/config.json file, or possibly inferred from the exercise's directory name.

# Example:
# ./bin/test

for exercise_dir in ./exercises/*/*; do
    exercise_name=$(basename "$exercise_dir")

    # Save original files to restore after running unit tests
    cp "${exercise_dir}/${exercise_name}.wat" "${exercise_dir}/${exercise_name}.wat.old"
    cp "${exercise_dir}/${exercise_name}.spec.js" "${exercise_dir}/${exercise_name}.spec.js.old"

    # Overwrite the exercise *.wat source with a known solution
    cp "${exercise_dir}/.meta/proof.ci.wat" "${exercise_dir}/${exercise_name}.wat"

    # Enable all Jest unit tests
    sed -i s/xtest/test/ "${exercise_dir}/${exercise_name}.spec.js"
done

npm test
declare -i jest_exit_code=$?

for exercise_dir in ./exercises/*/*; do
    exercise_name=$(basename "$exercise_dir")

    # Restore the original *.wat source
    mv "${exercise_dir}/${exercise_name}.wat.old" "${exercise_dir}/${exercise_name}.wat"

    # Enable the original Jest test spec
    mv "${exercise_dir}/${exercise_name}.spec.js.old" "${exercise_dir}/${exercise_name}.spec.js"
done

exit $jest_exit_code
